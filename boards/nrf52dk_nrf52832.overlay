/* SPDX-License-Identifier: Apache-2.0 */
#include <zephyr/dt-bindings/led/led.h>
#include "../nrf52-bindings.h"


// free up pin 27
&i2c0 {
	status = "disabled";
};

// free up pins 28, 29, 30
&spi1 {
	status = "disabled";
};

&pwm0 {
	status = "okay";
	pinctrl-0 = <&pwm0_default>;
	pinctrl-1 = <&pwm0_sleep>;
	pinctrl-names = "default", "sleep";


};

arduino_serial: &uart0 {
	status = "okay";
	compatible = "nordic,nrf-uarte";
	current-speed = <9600>;
	pinctrl-0 = <&uart0_default>;
	pinctrl-1 = <&uart0_sleep>;
	pinctrl-names = "default", "sleep";
};

&arduino_spi {/* MOSI on D11 / P0.23 */
	compatible = "nordic,nrf-spim";
	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <SPI_FREQ>;

		/* WS2812 */
		chain-length = <16>; /* arbitrary; change at will */
		color-mapping = <LED_COLOR_ID_GREEN
		LED_COLOR_ID_RED
		LED_COLOR_ID_BLUE>;
		spi-one-frame = <ONE_FRAME>;
		spi-zero-frame = <ZERO_FRAME>;
	};
};

/ {
	servo0: servo0 {
		compatible = "pwm-servo";
		pwms = <&pwm0 0 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		min-pulse = <PWM_USEC(1300)>;
		max-pulse = <PWM_USEC(1900)>;
	};
	servo1: servo1 {
		compatible = "pwm-servo";
		pwms = <&pwm0 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		min-pulse = <PWM_USEC(1000)>;
		max-pulse = <PWM_USEC(2000)>;
	};
	servo2: servo2 {
		compatible = "pwm-servo";
		pwms = <&pwm0 2 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		min-pulse = <PWM_USEC(1000)>;
		max-pulse = <PWM_USEC(2000)>;
	};
	servo3: servo3 {
		compatible = "pwm-servo";
		pwms = <&pwm0 3 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		min-pulse = <PWM_USEC(1000)>;
		max-pulse = <PWM_USEC(2000)>;
	};
	aliases {
		led-strip = &led_strip;
	};
};

&pinctrl {
	uart0_default: uart0_default {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 18)>,
			        <NRF_PSEL(UART_RX, 0, 14)>,
			        <NRF_PSEL(UART_RTS, 0, 5)>,
			        <NRF_PSEL(UART_CTS, 0, 7)>;
		};
	};
	spi2_default: spi2_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 26)>,
			        <NRF_PSEL(SPIM_MOSI, 0, 31)>,
			        <NRF_PSEL(SPIM_MISO, 0, 24)>;
		};
	};
	pwm0_default: pwm0_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 0, 30)>;
		};
		group2 {
			psels = <NRF_PSEL(PWM_OUT1, 0, 29)>;
		};
		group3 {
			psels = <NRF_PSEL(PWM_OUT2, 0, 28)>;
		};
		group4 {
			psels = <NRF_PSEL(PWM_OUT3, 0, 27)>;
		};
	};
	pwm0_sleep: pwm0_sleep {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 0, 30)>;
			low-power-enable;
		};
	};

};
